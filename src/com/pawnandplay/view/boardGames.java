/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.pawnandplay.view;
import com.pawnandplay.controller.ValidationUtil;
import com.pawnandplay.model.gamesModel;
import java.util.List;
import java.awt.Color;
import java.util.LinkedList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.border.TitledBorder;


/**
 *
 * @author sanskritia
 */
public class boardGames extends javax.swing.JFrame {
    
    private List<gamesModel> gamesList;
    private java.awt.CardLayout cardLayout;
    //private final ValidationUtil validationUtil;
    
    /**
     * Creates new form boardGames
     */
    public boardGames() {
        initComponents();
        //validationUtil = new ValidationUtil();
        initializeLayout(); //setup cardlayout and add screens
        initializeData(); 
        startProgress(); //display loading screen 
        gamesData();
    }
    
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(loadingScreen, "LoadingScreen");
        getContentPane().add(loginScreen, "LoginScreen");
        getContentPane().add(homePage, "MainScreen");
        getContentPane().add(productPage, "ProductScreen");
        getContentPane().add(entryPage, "DataEntryScreen");
        
        // Start with the loading screen
        cardLayout.show(getContentPane(), "loadingScreen");
    }
    
    private void initializeData() {
        gamesList = new LinkedList<>();
       
    //registering sample data 
    }
    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int prog = chunks.get(chunks.size() - 1);
                progress.setValue(prog);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }
    
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
    
    // Method to add student data and populate the table
    
    private void registerGame (gamesModel games) {
        gamesList.add(games);
        DefaultTableModel model = (DefaultTableModel) gameTable.getModel();
        model.addRow(new Object[]{
            games.getID(),
            games.getProductname(),
            games.getLevel(),
            games.getGenre(),
            games.getAge(),
            games.getStock(),
            games.getPrice(),
            games.getBrand()
        });
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginScreen = new javax.swing.JPanel();
        welcomeLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        gif = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        loginerror = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        loginLabel = new javax.swing.JLabel();
        homePage = new javax.swing.JPanel();
        mainHeader = new javax.swing.JPanel();
        mainheader1 = new javax.swing.JLabel();
        mainheader2 = new javax.swing.JLabel();
        mainpawnimg = new javax.swing.JLabel();
        mainMenuBar = new javax.swing.JPanel();
        hHomebtn = new javax.swing.JButton();
        hProdbtn = new javax.swing.JButton();
        hEntrybtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        maintext = new javax.swing.JTextArea();
        homeimg = new javax.swing.JLabel();
        productPage = new javax.swing.JPanel();
        productHeader = new javax.swing.JPanel();
        prodheader1 = new javax.swing.JLabel();
        prodheader2 = new javax.swing.JLabel();
        prodpawnimg = new javax.swing.JLabel();
        productMenuBar = new javax.swing.JPanel();
        pHomebtn = new javax.swing.JButton();
        pProdbtn = new javax.swing.JButton();
        pEntrybtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        gameTable = new javax.swing.JTable();
        prodimg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        entryPage = new javax.swing.JPanel();
        entryHeader = new javax.swing.JPanel();
        entryheader1 = new javax.swing.JLabel();
        entryheader2 = new javax.swing.JLabel();
        entrypawnimg = new javax.swing.JLabel();
        entryMenuBar = new javax.swing.JPanel();
        eHomebtn = new javax.swing.JButton();
        eProdbtn = new javax.swing.JButton();
        eEntrybtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        entrytext = new javax.swing.JTextArea();
        entryimg1 = new javax.swing.JLabel();
        entryimg2 = new javax.swing.JLabel();
        addbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        entrypanel = new javax.swing.JPanel();
        idlabel = new javax.swing.JLabel();
        namelabel = new javax.swing.JLabel();
        levellabel = new javax.swing.JLabel();
        genrelabel = new javax.swing.JLabel();
        agelabel = new javax.swing.JLabel();
        stocklabel = new javax.swing.JLabel();
        pricelabel = new javax.swing.JLabel();
        brandlabel = new javax.swing.JLabel();
        idfield = new javax.swing.JTextField();
        namefield = new javax.swing.JTextField();
        levelfield = new javax.swing.JTextField();
        genrefield = new javax.swing.JTextField();
        agefield = new javax.swing.JTextField();
        stockfield = new javax.swing.JTextField();
        pricefield = new javax.swing.JTextField();
        brandfield = new javax.swing.JTextField();
        idErrorLabel = new javax.swing.JLabel();
        nameErrorLabel = new javax.swing.JLabel();
        levelErrorLabel = new javax.swing.JLabel();
        genreErrorLabel = new javax.swing.JLabel();
        ageErrorLabel = new javax.swing.JLabel();
        stockErrorLabel = new javax.swing.JLabel();
        priceErrorLabel = new javax.swing.JLabel();
        brandErrorLabel = new javax.swing.JLabel();
        loadingScreen = new javax.swing.JPanel();
        pawnandplay = new javax.swing.JLabel();
        loadingtag = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();
        loading = new javax.swing.JLabel();
        loadingimg2 = new javax.swing.JLabel();
        loadingimg1 = new javax.swing.JLabel();

        loginScreen.setBackground(new java.awt.Color(128, 74, 74));
        loginScreen.setFont(new java.awt.Font("YuMincho +36p Kana", 0, 48)); // NOI18N
        loginScreen.setPreferredSize(new java.awt.Dimension(1512, 958));

        welcomeLabel.setFont(new java.awt.Font("YuMincho +36p Kana", 0, 48)); // NOI18N
        welcomeLabel.setForeground(new java.awt.Color(255, 255, 255));
        welcomeLabel.setText("WELCOME BACK!");
        welcomeLabel.setLocation(new java.awt.Point(1031, 278));
        welcomeLabel.setMaximumSize(new java.awt.Dimension(416, 66));
        welcomeLabel.setMinimumSize(new java.awt.Dimension(416, 66));
        welcomeLabel.setPreferredSize(new java.awt.Dimension(416, 66));
        welcomeLabel.setSize(new java.awt.Dimension(416, 66));

        usernameLabel.setFont(new java.awt.Font("YuMincho +36p Kana", 0, 24)); // NOI18N
        usernameLabel.setText("USERNAME:");

        passwordLabel.setFont(new java.awt.Font("YuMincho +36p Kana", 0, 24)); // NOI18N
        passwordLabel.setText("PASSWORD:");

        usernameField.setBackground(new java.awt.Color(239, 183, 183));
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/logingif.gif"))); // NOI18N

        loginBtn.setBackground(new java.awt.Color(239, 183, 183));
        loginBtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        loginBtn.setText("LOGIN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        loginerror.setFont(new java.awt.Font("ITF Devanagari Marathi", 1, 18)); // NOI18N
        loginerror.setForeground(new java.awt.Color(204, 0, 0));

        passwordField.setBackground(new java.awt.Color(239, 183, 183));
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        loginLabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 36)); // NOI18N
        loginLabel.setText("UNLEASH FUN, ONE GAME AT A TIME");

        javax.swing.GroupLayout loginScreenLayout = new javax.swing.GroupLayout(loginScreen);
        loginScreen.setLayout(loginScreenLayout);
        loginScreenLayout.setHorizontalGroup(
            loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginScreenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginScreenLayout.createSequentialGroup()
                        .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(347, 347, 347))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginScreenLayout.createSequentialGroup()
                        .addComponent(loginLabel)
                        .addGap(426, 426, 426))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginScreenLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(gif, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginerror, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loginScreenLayout.createSequentialGroup()
                        .addComponent(passwordLabel)
                        .addGap(37, 37, 37)
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernameField)
                            .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))
                    .addComponent(usernameLabel))
                .addGap(145, 145, 145))
        );
        loginScreenLayout.setVerticalGroup(
            loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginScreenLayout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginScreenLayout.createSequentialGroup()
                        .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernameLabel)
                            .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(143, 143, 143)
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordField)))
                    .addComponent(gif, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginerror, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(loginLabel)
                .addGap(24, 24, 24))
        );

        homePage.setBackground(new java.awt.Color(128, 74, 74));
        homePage.setMaximumSize(new java.awt.Dimension(1512, 982));
        homePage.setMinimumSize(new java.awt.Dimension(1512, 982));
        homePage.setSize(new java.awt.Dimension(1512, 982));

        mainHeader.setBackground(new java.awt.Color(194, 117, 117));
        mainHeader.setBounds(new java.awt.Rectangle(0, 0, 1512, 102));
        mainHeader.setMaximumSize(new java.awt.Dimension(1512, 102));

        mainheader1.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        mainheader1.setText("GAME ON - THE FUN NEVER ENDS");

        mainheader2.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        mainheader2.setForeground(new java.awt.Color(255, 255, 255));
        mainheader2.setText("PAWN AND PLAY");

        mainpawnimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/head.png"))); // NOI18N

        javax.swing.GroupLayout mainHeaderLayout = new javax.swing.GroupLayout(mainHeader);
        mainHeader.setLayout(mainHeaderLayout);
        mainHeaderLayout.setHorizontalGroup(
            mainHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainHeaderLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(mainHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainheader1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainheader2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainpawnimg)
                .addGap(135, 135, 135))
        );
        mainHeaderLayout.setVerticalGroup(
            mainHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainHeaderLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(mainheader1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainheader2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
            .addComponent(mainpawnimg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
        );

        mainMenuBar.setBackground(new java.awt.Color(239, 183, 183));
        mainMenuBar.setBounds(new java.awt.Rectangle(0, 102, 1512, 61));
        mainMenuBar.setMaximumSize(new java.awt.Dimension(1512, 61));

        hHomebtn.setBackground(new java.awt.Color(239, 183, 183));
        hHomebtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        hHomebtn.setText("Home");
        hHomebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hHomebtnActionPerformed(evt);
            }
        });

        hProdbtn.setBackground(new java.awt.Color(239, 183, 183));
        hProdbtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        hProdbtn.setText("Product");
        hProdbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hProdbtnActionPerformed(evt);
            }
        });

        hEntrybtn.setBackground(new java.awt.Color(239, 183, 183));
        hEntrybtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        hEntrybtn.setText("Entry");
        hEntrybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hEntrybtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuBarLayout = new javax.swing.GroupLayout(mainMenuBar);
        mainMenuBar.setLayout(mainMenuBarLayout);
        mainMenuBarLayout.setHorizontalGroup(
            mainMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuBarLayout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(hHomebtn)
                .addGap(308, 308, 308)
                .addComponent(hProdbtn)
                .addGap(308, 308, 308)
                .addComponent(hEntrybtn)
                .addContainerGap(405, Short.MAX_VALUE))
        );
        mainMenuBarLayout.setVerticalGroup(
            mainMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuBarLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(mainMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hHomebtn)
                    .addComponent(hProdbtn)
                    .addComponent(hEntrybtn))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        maintext.setBackground(new java.awt.Color(128, 74, 74));
        maintext.setColumns(20);
        maintext.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        maintext.setForeground(new java.awt.Color(255, 255, 255));
        maintext.setRows(5);
        maintext.setText("                                          Welcome to Pawn & Play –\n                                 Your Ultimate Board Game Destination!\n\n   At Pawn & Play, we believe that life’s best moments happen around a game board. \n   Whether you’re a seasoned strategist, a casual player, or someone just discovering\n   the joy of board gaming, we have something for everyone. From timeless classics to \n   the latest adventures, our collection spans a world of fun, strategy, and unforgettable\n   memories.\n\n\n   Explore our carefully curated selection of family games, party hits, strategic epics,\n   and everything in between. With our passion for play and commitment to quality, \n   we aim to bring people together one game at a time.\n\n\n            Your next great gaming experience starts here. Ready to roll the dice?");
        maintext.setBorder(null);
        maintext.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(maintext);

        homeimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/home.jpeg"))); // NOI18N

        javax.swing.GroupLayout homePageLayout = new javax.swing.GroupLayout(homePage);
        homePage.setLayout(homePageLayout);
        homePageLayout.setHorizontalGroup(
            homePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(homeimg, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(homePageLayout.createSequentialGroup()
                .addGroup(homePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainMenuBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 451, Short.MAX_VALUE))
        );
        homePageLayout.setVerticalGroup(
            homePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageLayout.createSequentialGroup()
                .addComponent(mainHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainMenuBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(homePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(homeimg, javax.swing.GroupLayout.PREFERRED_SIZE, 661, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(465, Short.MAX_VALUE))
        );

        productPage.setBackground(new java.awt.Color(128, 74, 74));
        productPage.setMaximumSize(new java.awt.Dimension(1512, 982));
        productPage.setMinimumSize(new java.awt.Dimension(1512, 982));
        productPage.setSize(new java.awt.Dimension(1512, 982));

        productHeader.setBackground(new java.awt.Color(194, 117, 117));
        productHeader.setBounds(new java.awt.Rectangle(0, 0, 1512, 102));
        productHeader.setMaximumSize(new java.awt.Dimension(1512, 102));

        prodheader1.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        prodheader1.setText("GAME ON - THE FUN NEVER ENDS");

        prodheader2.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        prodheader2.setForeground(new java.awt.Color(255, 255, 255));
        prodheader2.setText("PAWN AND PLAY");

        prodpawnimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/head.png"))); // NOI18N

        javax.swing.GroupLayout productHeaderLayout = new javax.swing.GroupLayout(productHeader);
        productHeader.setLayout(productHeaderLayout);
        productHeaderLayout.setHorizontalGroup(
            productHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productHeaderLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(productHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(prodheader1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prodheader2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1018, Short.MAX_VALUE)
                .addComponent(prodpawnimg)
                .addGap(366, 366, 366))
        );
        productHeaderLayout.setVerticalGroup(
            productHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productHeaderLayout.createSequentialGroup()
                .addGroup(productHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(productHeaderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(prodpawnimg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(productHeaderLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(prodheader1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prodheader2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );

        productMenuBar.setBackground(new java.awt.Color(239, 183, 183));
        productMenuBar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), null));
        productMenuBar.setBounds(new java.awt.Rectangle(0, 102, 1512, 61));
        productMenuBar.setMaximumSize(new java.awt.Dimension(1512, 61));

        pHomebtn.setBackground(new java.awt.Color(239, 183, 183));
        pHomebtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        pHomebtn.setText("Home");
        pHomebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pHomebtnActionPerformed(evt);
            }
        });

        pProdbtn.setBackground(new java.awt.Color(239, 183, 183));
        pProdbtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        pProdbtn.setText("Saman");
        pProdbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pProdbtnActionPerformed(evt);
            }
        });

        pEntrybtn.setBackground(new java.awt.Color(239, 183, 183));
        pEntrybtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        pEntrybtn.setText("Entry");
        pEntrybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pEntrybtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout productMenuBarLayout = new javax.swing.GroupLayout(productMenuBar);
        productMenuBar.setLayout(productMenuBarLayout);
        productMenuBarLayout.setHorizontalGroup(
            productMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productMenuBarLayout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(pHomebtn)
                .addGap(353, 353, 353)
                .addComponent(pProdbtn)
                .addGap(394, 394, 394)
                .addComponent(pEntrybtn)
                .addContainerGap(510, Short.MAX_VALUE))
        );
        productMenuBarLayout.setVerticalGroup(
            productMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productMenuBarLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(productMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pHomebtn)
                    .addComponent(pProdbtn)
                    .addComponent(pEntrybtn))
                .addGap(21, 21, 21))
        );

        gameTable.setBackground(new java.awt.Color(239, 183, 183));
        gameTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Product Name", "Level", "Genre", "Age", "Stock", "Price", "Brand"
            }
        ));
        jScrollPane2.setViewportView(gameTable);

        prodimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/product.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/gamer.gif"))); // NOI18N

        javax.swing.GroupLayout productPageLayout = new javax.swing.GroupLayout(productPage);
        productPage.setLayout(productPageLayout);
        productPageLayout.setHorizontalGroup(
            productPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPageLayout.createSequentialGroup()
                .addGroup(productPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productMenuBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(productPageLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(productPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1004, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(prodimg, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        productPageLayout.setVerticalGroup(
            productPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPageLayout.createSequentialGroup()
                .addComponent(productHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(productMenuBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(productPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(productPageLayout.createSequentialGroup()
                        .addComponent(prodimg)
                        .addContainerGap(323, Short.MAX_VALUE))
                    .addGroup(productPageLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(168, 168, 168))))
        );

        entryPage.setBackground(new java.awt.Color(128, 74, 74));
        entryPage.setForeground(new java.awt.Color(255, 255, 255));
        entryPage.setMaximumSize(new java.awt.Dimension(1512, 982));
        entryPage.setMinimumSize(new java.awt.Dimension(1512, 982));
        entryPage.setSize(new java.awt.Dimension(1512, 982));

        entryHeader.setBackground(new java.awt.Color(194, 117, 117));
        entryHeader.setBounds(new java.awt.Rectangle(0, 0, 1512, 102));
        entryHeader.setMaximumSize(new java.awt.Dimension(1512, 102));

        entryheader1.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        entryheader1.setText("GAME ON - THE FUN NEVER ENDS");

        entryheader2.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        entryheader2.setForeground(new java.awt.Color(255, 255, 255));
        entryheader2.setText("PAWN AND PLAY");

        entrypawnimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/head.png"))); // NOI18N

        javax.swing.GroupLayout entryHeaderLayout = new javax.swing.GroupLayout(entryHeader);
        entryHeader.setLayout(entryHeaderLayout);
        entryHeaderLayout.setHorizontalGroup(
            entryHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryHeaderLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(entryHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(entryheader1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entryheader2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(entrypawnimg)
                .addGap(87, 87, 87))
        );
        entryHeaderLayout.setVerticalGroup(
            entryHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryHeaderLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(entryheader1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entryheader2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addGap(16, 16, 16))
            .addGroup(entryHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(entrypawnimg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        entryMenuBar.setBackground(new java.awt.Color(239, 183, 183));
        entryMenuBar.setBounds(new java.awt.Rectangle(0, 102, 1512, 61));
        entryMenuBar.setMaximumSize(new java.awt.Dimension(1512, 61));

        eHomebtn.setBackground(new java.awt.Color(239, 183, 183));
        eHomebtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        eHomebtn.setText("Home");
        eHomebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eHomebtnActionPerformed(evt);
            }
        });

        eProdbtn.setBackground(new java.awt.Color(239, 183, 183));
        eProdbtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        eProdbtn.setText("Product");
        eProdbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eProdbtnActionPerformed(evt);
            }
        });

        eEntrybtn.setBackground(new java.awt.Color(239, 183, 183));
        eEntrybtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        eEntrybtn.setText("Entry");
        eEntrybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eEntrybtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout entryMenuBarLayout = new javax.swing.GroupLayout(entryMenuBar);
        entryMenuBar.setLayout(entryMenuBarLayout);
        entryMenuBarLayout.setHorizontalGroup(
            entryMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryMenuBarLayout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(eHomebtn)
                .addGap(308, 308, 308)
                .addComponent(eProdbtn)
                .addGap(308, 308, 308)
                .addComponent(eEntrybtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        entryMenuBarLayout.setVerticalGroup(
            entryMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, entryMenuBarLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(entryMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eHomebtn)
                    .addComponent(eProdbtn)
                    .addComponent(eEntrybtn))
                .addGap(19, 19, 19))
        );

        entrytext.setBackground(new java.awt.Color(128, 74, 74));
        entrytext.setColumns(20);
        entrytext.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        entrytext.setForeground(new java.awt.Color(255, 255, 255));
        entrytext.setRows(5);
        entrytext.setText("                     Your adventure into the world of board games is just around the corner! \n                Whether you’re planning an epic strategy night, a family-friendly competition, \n                       or a cozy puzzle session, your cart is filled with fun waiting to happen.\n\n          Board games aren’t just games—they’re stories, challenges, and unforgettable memories.\n        Take a moment to double-check your selections, and get ready to roll the dice, shuffle the \n                                                    cards, or conquer the board.");
        entrytext.setBorder(null);
        jScrollPane3.setViewportView(entrytext);

        entryimg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/cart2.png"))); // NOI18N

        entryimg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/cart1.png"))); // NOI18N

        addbtn.setBackground(new java.awt.Color(239, 183, 183));
        addbtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        addbtn.setText("ADD");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(239, 183, 183));
        updatebtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        updatebtn.setText("UPDATE");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(239, 183, 183));
        deletebtn.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 24)); // NOI18N
        deletebtn.setText("DELETE");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        entrypanel.setBackground(new java.awt.Color(239, 183, 183));
        entrypanel.setBorder(new javax.swing.border.MatteBorder(null));

        idlabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        idlabel.setText("ID");

        namelabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        namelabel.setText("Product Name");

        levellabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        levellabel.setText("Level");

        genrelabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        genrelabel.setText("Genre");

        agelabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        agelabel.setText("Age");

        stocklabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        stocklabel.setText("Stock");

        pricelabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        pricelabel.setText("Price");

        brandlabel.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 18)); // NOI18N
        brandlabel.setText("Brand");

        idfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idfieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout entrypanelLayout = new javax.swing.GroupLayout(entrypanel);
        entrypanel.setLayout(entrypanelLayout);
        entrypanelLayout.setHorizontalGroup(
            entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entrypanelLayout.createSequentialGroup()
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(entrypanelLayout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(genreErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(entrypanelLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(genrelabel, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(entrypanelLayout.createSequentialGroup()
                                    .addComponent(idlabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(idErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(idfield, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)))
                                .addGroup(entrypanelLayout.createSequentialGroup()
                                    .addComponent(namelabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                    .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(namefield, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                        .addComponent(nameErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(entrypanelLayout.createSequentialGroup()
                                    .addComponent(levellabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(levelfield, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                        .addComponent(levelErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(genrefield, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(71, 71, 71)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stocklabel)
                    .addComponent(pricelabel)
                    .addComponent(agelabel)
                    .addComponent(brandlabel))
                .addGap(106, 106, 106)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(agefield)
                    .addComponent(stockfield)
                    .addComponent(pricefield)
                    .addComponent(brandfield, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(ageErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stockErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priceErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brandErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        entrypanelLayout.setVerticalGroup(
            entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entrypanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idlabel)
                    .addComponent(agelabel)
                    .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageErrorLabel))
                .addGap(21, 21, 21)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namelabel)
                    .addComponent(stocklabel)
                    .addComponent(namefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockErrorLabel))
                .addGap(21, 21, 21)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(levellabel)
                    .addComponent(levelfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pricelabel)
                    .addComponent(pricefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(entrypanelLayout.createSequentialGroup()
                        .addGap(0, 27, Short.MAX_VALUE)
                        .addComponent(priceErrorLabel))
                    .addGroup(entrypanelLayout.createSequentialGroup()
                        .addComponent(levelErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(21, 21, 21)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genrelabel)
                    .addComponent(brandlabel)
                    .addComponent(genrefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brandfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entrypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(genreErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brandErrorLabel)))
        );

        javax.swing.GroupLayout entryPageLayout = new javax.swing.GroupLayout(entryPage);
        entryPage.setLayout(entryPageLayout);
        entryPageLayout.setHorizontalGroup(
            entryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(entryHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(entryMenuBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, entryPageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(entryimg2)
                .addGap(0, 0, 0)
                .addGroup(entryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deletebtn)
                    .addComponent(addbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(90, 90, 90))
            .addGroup(entryPageLayout.createSequentialGroup()
                .addGroup(entryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(entryPageLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(entryimg1)
                        .addGap(133, 133, 133)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(entryPageLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(entrypanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159)))
                .addContainerGap(423, Short.MAX_VALUE))
        );
        entryPageLayout.setVerticalGroup(
            entryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryPageLayout.createSequentialGroup()
                .addComponent(entryHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(entryMenuBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(entryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(entryPageLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(entryimg1)
                        .addGap(47, 47, 47)
                        .addComponent(entrypanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(entryPageLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(entryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(entryPageLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(entryimg2))
                            .addGroup(entryPageLayout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(addbtn)
                                .addGap(80, 80, 80)
                                .addComponent(updatebtn)
                                .addGap(80, 80, 80)
                                .addComponent(deletebtn)))))
                .addContainerGap(1171, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loadingScreen.setBackground(new java.awt.Color(128, 74, 74));
        loadingScreen.setPreferredSize(new java.awt.Dimension(1512, 958));
        loadingScreen.setSize(new java.awt.Dimension(1512, 958));

        pawnandplay.setBackground(new java.awt.Color(0, 0, 0));
        pawnandplay.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 48)); // NOI18N
        pawnandplay.setForeground(new java.awt.Color(255, 255, 255));
        pawnandplay.setText("PAWN AND PLAY");
        pawnandplay.setAlignmentX(652.0F);
        pawnandplay.setAlignmentY(326.0F);
        pawnandplay.setBounds(new java.awt.Rectangle(652, 326, 0, 0));
        pawnandplay.setMaximumSize(new java.awt.Dimension(441, 73));
        pawnandplay.setMinimumSize(new java.awt.Dimension(441, 73));

        loadingtag.setFont(new java.awt.Font("ITF Devanagari Marathi", 0, 40)); // NOI18N
        loadingtag.setText("YOUR NEXT FAVOURITE GAME IS WAITING");
        loadingtag.setLocation(new java.awt.Point(313, 350));
        loadingtag.setMaximumSize(new java.awt.Dimension(888, 57));
        loadingtag.setMinimumSize(new java.awt.Dimension(888, 57));

        progress.setBackground(new java.awt.Color(239, 183, 183));
        progress.setForeground(new java.awt.Color(239, 183, 183));
        progress.setBounds(new java.awt.Rectangle(565, 714, 384, 35));
        progress.setMaximumSize(new java.awt.Dimension(384, 35));
        progress.setMinimumSize(new java.awt.Dimension(384, 35));
        progress.setPreferredSize(new java.awt.Dimension(384, 35));

        loading.setFont(new java.awt.Font("YuMincho +36p Kana", 0, 36)); // NOI18N
        loading.setText("Loading ...");
        loading.setLocation(new java.awt.Point(170, 54));
        loading.setPreferredSize(new java.awt.Dimension(170, 54));

        loadingimg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/loading2.png"))); // NOI18N

        loadingimg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pawnandplay/resources/loading1.png"))); // NOI18N

        javax.swing.GroupLayout loadingScreenLayout = new javax.swing.GroupLayout(loadingScreen);
        loadingScreen.setLayout(loadingScreenLayout);
        loadingScreenLayout.setHorizontalGroup(
            loadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadingScreenLayout.createSequentialGroup()
                .addGroup(loadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(loadingScreenLayout.createSequentialGroup()
                        .addContainerGap(396, Short.MAX_VALUE)
                        .addGroup(loadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(loadingtag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pawnandplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(loadingScreenLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(loadingimg1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(loadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loadingimg2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        loadingScreenLayout.setVerticalGroup(
            loadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadingScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadingimg2, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadingScreenLayout.createSequentialGroup()
                .addGap(0, 778, Short.MAX_VALUE)
                .addGroup(loadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadingScreenLayout.createSequentialGroup()
                        .addComponent(pawnandplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loadingtag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150)
                        .addComponent(loading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(314, 314, 314))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadingScreenLayout.createSequentialGroup()
                        .addComponent(loadingimg1)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, 1616, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, 1482, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadListToTable(List<gamesModel> gamesList) {
    // Get the model of the table to update it
            DefaultTableModel model = (DefaultTableModel) gameTable.getModel();

            // Clear existing rows before adding new ones
            model.setRowCount(0);

            // Iterate through the games list and add each game's data to the table
            gamesList.forEach(game -> model.addRow(new Object[]{
                game.getID(),              // Game ID
                game.getProductname(),     // Game name
                game.getLevel(),           // Game level (e.g., Beginner, Expert)
                game.getGenre(),           // Game genre (e.g., Strategy, Fantasy)
                game.getAge(),             // Recommended age for the game
                game.getStock(),           // Game stock
                game.getPrice(),           // Game price
                game.getBrand()            // Game brand
            }));
    } 
   
   private void gamesData() {
        // Add some sample board game data to the gamesList
        gamesList.add(new gamesModel(1, "Monopoly", "Beginner", "Family", 8, 30, 1200, "Hasbro"));
        gamesList.add(new gamesModel(2, "Catan", "Intermediate", "Strategy", 10, 50, 5000, "Kosmos"));
        gamesList.add(new gamesModel(3, "Scrabble", "Beginner", "Family", 8, 20, 2000, "Mattel"));
        gamesList.add(new gamesModel(4, "Ticket to Ride", "Intermediate", "Strategy", 10, 40, 4500, "Days of Wonder"));

        // Call the method to populate the table with the gamesList data
        loadListToTable(gamesList);
    }
   
        /**
      * Clears all the input fields in the board games form.
      */
    private void clearGameFields() {
         idfield.setText("");            // Clear the ID field
         namefield.setText("");   // Clear the product name field
         levelfield.setText("");         // Clear the level field
         genrefield.setText("");         // Clear the genre field
         agefield.setText("");           // Clear the age field
         stockfield.setText("");         // Clear the stock field
         pricefield.setText("");         // Clear the price field
         brandfield.setText("");         // Clear the brand field
     }
    
    private void errorOrNormalField(JTextField textField, String fieldName, JLabel errorLbl, String errorMsg, Color color, boolean isError){
        textField.setBorder(
                javax.swing.BorderFactory.createTitledBorder(
                    javax.swing.BorderFactory.createLineBorder(color, 2), fieldName, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, 
                    javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12),color));
        
        if(isError) {
            errorLbl.setText(errorMsg);
            errorLbl.setVisible(true);
        }   
    }
    
      
    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:                                        
        // Get the username and password input
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            loginerror.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("Sanskriti") || !password.equals("admin")) {
            loginerror.setText("Either username or password is incorrect!");
        } // If credentials are correct, proceed to load the main screen
        else {
            loginerror.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void hProdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hProdbtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "ProductScreen");
    }//GEN-LAST:event_hProdbtnActionPerformed

    private void pProdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pProdbtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "ProductScreen");
    }//GEN-LAST:event_pProdbtnActionPerformed

    private void eProdbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eProdbtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "ProductScreen");
    }//GEN-LAST:event_eProdbtnActionPerformed

    private void hHomebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hHomebtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "MainScreen");
    }//GEN-LAST:event_hHomebtnActionPerformed

    private void hEntrybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hEntrybtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "DataEntryScreen");
    }//GEN-LAST:event_hEntrybtnActionPerformed

    private void pHomebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pHomebtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "MainScreen");
    }//GEN-LAST:event_pHomebtnActionPerformed

    private void pEntrybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pEntrybtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "DataEntryScreen");
    }//GEN-LAST:event_pEntrybtnActionPerformed
    
    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
    String idText = idfield.getText().trim();
    String name = namefield.getText().trim();
    String level = levelfield.getText().trim();
    String genre = genrefield.getText().trim();
    String ageText = agefield.getText().trim();
    String stockText = stockfield.getText().trim();
    String priceText = pricefield.getText().trim();
    String brand = brandfield.getText().trim();

    try {
        // Validate ID
        if (!ValidationUtil.isIdValid(idText)) {
            errorOrNormalField(idfield, "ID", idErrorLabel, "ID must be a positive number.", Color.RED, true);
            return;
        } else {
            errorOrNormalField(idfield, "ID", idErrorLabel, "", Color.GREEN, false);
        }

        // Validate Name
        if (!ValidationUtil.isValidProductName(name)) {
            errorOrNormalField(namefield, "Product Name", nameErrorLabel, "Product name can only contain letters and spaces.", Color.RED, true);
            return;
        } else {
            errorOrNormalField(namefield, "Product Name", nameErrorLabel, "", Color.GREEN, false);
        }

        // Validate Level
        if (!ValidationUtil.isValidLevel(level)) {
            errorOrNormalField(levelfield, "Level", levelErrorLabel, "Level must be Beginner, Intermediate, or Expert.", Color.RED, true);
            return;
        } else {
            errorOrNormalField(levelfield, "Level", levelErrorLabel, "", Color.GREEN, false);
        }

        // Validate Genre
        if (!ValidationUtil.isValidGenre(genre)) {
            errorOrNormalField(genrefield, "Genre", genreErrorLabel, "Invalid genre. Choose a valid option.", Color.RED, true);
            return;
        } else {
            errorOrNormalField(genrefield, "Genre", genreErrorLabel, "", Color.GREEN, false);
        }

        // Validate Brand
        if (!ValidationUtil.isValidBrand(brand)) {
            errorOrNormalField(brandfield, "Brand", brandErrorLabel, "Brand can only contain letters, numbers, and spaces.", Color.RED, true);
            return;
        } else {
            errorOrNormalField(brandfield, "Brand", brandErrorLabel, "", Color.GREEN, false);
        }

        // Validate numeric fields for Age, Stock, and Price
        int age = 0, stock = 0;
        double price = 0.0;

        // Validate Age
        try {
            age = Integer.parseInt(ageText);
            if (!ValidationUtil.isValidAge(age)) {
                errorOrNormalField(agefield, "Age", ageErrorLabel, "Age must be between 4 and 99.", Color.RED, true);
                return;
            } else {
                errorOrNormalField(agefield, "Age", ageErrorLabel, "", Color.GREEN, false);
            }
        } catch (NumberFormatException e) {
            errorOrNormalField(agefield, "Age", ageErrorLabel, "Age must be a valid number.", Color.RED, true);
            return;
        }

        // Validate Stock
        try {
            stock = Integer.parseInt(stockText);
            if (!ValidationUtil.isValidStock(stock)) {
                errorOrNormalField(stockfield, "Stock", stockErrorLabel, "Stock cannot be negative.", Color.RED, true);
                return;
            } else {
                errorOrNormalField(stockfield, "Stock", stockErrorLabel, "", Color.GREEN, false);
            }
        } catch (NumberFormatException e) {
            errorOrNormalField(stockfield, "Stock", stockErrorLabel, "Stock must be a valid number.", Color.RED, true);
            return;
        }

        // Validate Price
        try {
            price = Double.parseDouble(priceText);
            if (!ValidationUtil.isValidPrice(price)) {
                errorOrNormalField(pricefield, "Price", priceErrorLabel, "Price must be greater than zero.", Color.RED, true);
                return;
            } else {
                errorOrNormalField(pricefield, "Price", priceErrorLabel, "", Color.GREEN, false);
            }
        } catch (NumberFormatException e) {
            errorOrNormalField(pricefield, "Price", priceErrorLabel, "Price must be a valid number.", Color.RED, true);
            return;
        }

        // If all fields are valid, proceed to add the game
        gamesModel newGame = new gamesModel(
            Integer.parseInt(idText), name, level, genre, age, stock, (int)price, brand
        );

        // Assuming the method registerGame adds the new game to your data structure
        registerGame(newGame);

        // Show success message
        JOptionPane.showMessageDialog(this, "Game added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Clear fields after successful addition
        clearGameFields();

        // Reset error fields to normal state
        errorOrNormalField(idfield, "", idErrorLabel, "", Color.BLACK, false);
        errorOrNormalField(namefield, "", nameErrorLabel, "", Color.BLACK, false);
        errorOrNormalField(levelfield, "", levelErrorLabel, "", Color.BLACK, false);
        errorOrNormalField(genrefield, "", genreErrorLabel, "", Color.BLACK, false);
        errorOrNormalField(agefield, "", ageErrorLabel, "", Color.BLACK, false);
        errorOrNormalField(stockfield, "", stockErrorLabel, "", Color.BLACK, false);
        errorOrNormalField(pricefield, "", priceErrorLabel, "", Color.BLACK, false);
        errorOrNormalField(brandfield, "", brandErrorLabel, "", Color.BLACK, false);

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "An unexpected error occurred.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_addbtnActionPerformed

    private void idfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idfieldActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_updatebtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        String idText = idfield.getText().trim();

    // Check if the ID field is empty
    if (idText.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Kindly enter an ID!", "Empty ID Field", JOptionPane.ERROR_MESSAGE);
        return;
    }

    gamesModel exists = null;

    // Search for the game with the provided ID
    for (gamesModel game : gamesList) {
        if (game.getID() == Integer.parseInt(idText)) {
            exists = game;
            break; 
        }
    }

    // If the game does not exist, show an error message
    if (exists == null) {
        JOptionPane.showMessageDialog(null, "Please enter a valid ID!", "Invalid ID", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Remove the game from the list
    gamesList.remove(exists);
    JOptionPane.showMessageDialog(null, "Game has been removed.", "DELETED", JOptionPane.INFORMATION_MESSAGE);

    // Update the table 
    loadListToTable(gamesList);

    // Clear the input fields
    clearGameFields();
    }//GEN-LAST:event_deletebtnActionPerformed

    private void eHomebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eHomebtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "MainScreen");
    }//GEN-LAST:event_eHomebtnActionPerformed

    private void eEntrybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eEntrybtnActionPerformed
        // TODO add your handling code here:
        cardLayout.show(getContentPane(), "DataEntryScreen");
    }//GEN-LAST:event_eEntrybtnActionPerformed

    
    
   /**
    * Checks whether a game with the same Game ID already exists in the
    * game list.
    *
    * @param game the GameModel object to check for duplicates
    * @return true if a duplicate is found, false otherwise
    */
    private boolean checkDuplicateGame(gamesModel game) {
       return gamesList.stream()
               .anyMatch(existingGame
                       -> existingGame.getID() == game.getID());
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(boardGames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(boardGames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(boardGames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(boardGames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new boardGames().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JLabel ageErrorLabel;
    private javax.swing.JTextField agefield;
    private javax.swing.JLabel agelabel;
    private javax.swing.JLabel brandErrorLabel;
    private javax.swing.JTextField brandfield;
    private javax.swing.JLabel brandlabel;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton eEntrybtn;
    private javax.swing.JButton eHomebtn;
    private javax.swing.JButton eProdbtn;
    private javax.swing.JPanel entryHeader;
    private javax.swing.JPanel entryMenuBar;
    private javax.swing.JPanel entryPage;
    private javax.swing.JLabel entryheader1;
    private javax.swing.JLabel entryheader2;
    private javax.swing.JLabel entryimg1;
    private javax.swing.JLabel entryimg2;
    private javax.swing.JPanel entrypanel;
    private javax.swing.JLabel entrypawnimg;
    private javax.swing.JTextArea entrytext;
    private javax.swing.JTable gameTable;
    private javax.swing.JLabel genreErrorLabel;
    private javax.swing.JTextField genrefield;
    private javax.swing.JLabel genrelabel;
    private javax.swing.JLabel gif;
    private javax.swing.JButton hEntrybtn;
    private javax.swing.JButton hHomebtn;
    private javax.swing.JButton hProdbtn;
    private javax.swing.JPanel homePage;
    private javax.swing.JLabel homeimg;
    private javax.swing.JLabel idErrorLabel;
    private javax.swing.JTextField idfield;
    private javax.swing.JLabel idlabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel levelErrorLabel;
    private javax.swing.JTextField levelfield;
    private javax.swing.JLabel levellabel;
    private javax.swing.JLabel loading;
    private javax.swing.JPanel loadingScreen;
    private javax.swing.JLabel loadingimg1;
    private javax.swing.JLabel loadingimg2;
    private javax.swing.JLabel loadingtag;
    private javax.swing.JButton loginBtn;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPanel loginScreen;
    private javax.swing.JLabel loginerror;
    private javax.swing.JPanel mainHeader;
    private javax.swing.JPanel mainMenuBar;
    private javax.swing.JLabel mainheader1;
    private javax.swing.JLabel mainheader2;
    private javax.swing.JLabel mainpawnimg;
    private javax.swing.JTextArea maintext;
    private javax.swing.JLabel nameErrorLabel;
    private javax.swing.JTextField namefield;
    private javax.swing.JLabel namelabel;
    private javax.swing.JButton pEntrybtn;
    private javax.swing.JButton pHomebtn;
    private javax.swing.JButton pProdbtn;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel pawnandplay;
    private javax.swing.JLabel priceErrorLabel;
    private javax.swing.JTextField pricefield;
    private javax.swing.JLabel pricelabel;
    private javax.swing.JLabel prodheader1;
    private javax.swing.JLabel prodheader2;
    private javax.swing.JLabel prodimg;
    private javax.swing.JLabel prodpawnimg;
    private javax.swing.JPanel productHeader;
    private javax.swing.JPanel productMenuBar;
    private javax.swing.JPanel productPage;
    private javax.swing.JProgressBar progress;
    private javax.swing.JLabel stockErrorLabel;
    private javax.swing.JTextField stockfield;
    private javax.swing.JLabel stocklabel;
    private javax.swing.JButton updatebtn;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
